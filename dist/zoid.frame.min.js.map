{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/undefined.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","constructor","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","promiseResult","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","slice","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","closeWindow","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","Class","isNativeReflectConstruct","a","instance","Function","_wrapNativeSuper","_cache","Map","Wrapper","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","arrayFrom","isDefined","cleanup","cleanErr","tasks","cleaned","cleaner","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","getBody","body","document","isDocumentReady","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","toPx","toNum","toCSS","test","getGlobal","globalKey","__POST_ROBOT__","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getName","getType","focus","isClosed","setLocation","href","opts","form","display","input","submit","submitForm","setName","sameDomain","frameElement","querySelectorAll","getFrameForWindow","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","open","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","on","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","crossDomainFunctionWrapper","fireAndForget","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","sendMessage","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receiveMessage","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","mockUserAgent","getUserAgent","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","getHelloPromise","awaitWindowHello","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","max","internalSerializeMessage","internalDeserializeMessage","getProxyObject","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","export","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","destroy","defaultNoop","decorateOnce","eachProp","propDef","serializeProps","getParam","queryParam","bodyParam","getValue","queryValue","bodyValue","finalParam","finalValue","serialization","dotify","prefix","newobj","every","dotkey","mapProps","parentComponent","triggered","emitter","currentProxyWin","currentProxyContainer","childComponent","overrides","parentWin","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","resolveInitPromise","rejectInitPromise","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","cleanUpWindow","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","exportsPromise","resolveExports","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","rerender","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","parentElement","mutationObserver","frameWin","watchElementForClose","removeError","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","alias","default","decorate","decoratedValue","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","ZOID","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","query","originalUrl","originalHash","hashString","extendUrl","normalizeMockUrl","buildBodyPromise","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","getMethodPromise","loadUrlPromise","windowUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","runTimeoutPromise","onRenderedPromise","getExports","defaultContainerTemplate","div","cspNonce","classList","add","remove","cleanInstances","cleanZoid","component","allowDelegateListener","delegateListener","bridgeUrl","allowedParentDomains","defaultContext","validate","eligible","logger","info","normalizeOptions","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentExports","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","xport","normalizedProps","normalizeChildProps","checkParentDomain","getProps","getPropsByRef","eligibility","reason","clone","getDefaultContext","finalContext","getDefaultContainer","newInstance","renderTo","isEligible","driver","driverName","dep","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.frame.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n        \n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe method-unbinding\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(once(() => method(cleanErr)));\n            }\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull,\n    serializeUndefined\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,\n    undefined? : CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull,\n    [ TYPE.UNDEFINED ]: serializeUndefined\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nimport type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() : Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\n\nexport function serializeUndefined(val : void) : NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\n\nexport function deserializeUndefined() : void {\n    // pass\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull,\n    deserializeUndefined\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>,\n    undefined? : PrimitiveDeserializer<void>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull,\n    [ TYPE.UNDEFINED ]: deserializeUndefined\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop, submitForm } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE, METHOD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SetLocationOptions = {|\n    method? : $Values<typeof METHOD>,\n    body? : {|\n        [string] : string | boolean\n    |}\n|};\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (url : string, opts? : SetLocationOptions) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    const getName = () => winPromise.then(win => {\n        if (isWindowClosed(win)) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n\n        return windowNamePromise;\n    });\n\n    const getDefaultSetLocationOptions = () => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setLocation = (href : string, opts? : SetLocationOptions = getDefaultSetLocationOptions()) => winPromise.then(win => {\n        const domain = `${ window.location.protocol }//${ window.location.host }`;\n        const { method = METHOD.GET, body } = opts;\n\n        if (href.indexOf('/') === 0) {\n            href = `${ domain }${ href }`;\n        } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n            throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n        }\n\n        if (method === METHOD.POST) {\n            return getName().then(name => {\n                if (!name) {\n                    throw new Error(`Can not post to window without target name`);\n                }\n\n                submitForm({\n                    url:    href,\n                    target: name,\n                    method,\n                    body\n                });\n            });\n        } else if (method === METHOD.GET) {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n\n        } else {\n            throw new Error(`Unsupported method: ${ method }`);\n        }\n    });\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName,\n        focus:         () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation,\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string, opts? : SetLocationOptions) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href, opts).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe[method-unbinding]\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                // $FlowFixMe[object-this-reference]\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X>(options : NormalizedComponentOptionsType<P, X>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports: parentExports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent : ParentExportsType<P, X> = deserializeMessage(parentComponentWindow, parentDomain, parentExports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        return parent.export(xports);\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport type { CssDimensionsType } from '../types';\nimport { PROP_SERIALIZATION, PROP_TYPE } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {|\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>,\n\n    ...P\n|};\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    uid : uidPropType,\n    cspNonce? : ?cspNoncePropType,\n    dimensions : CssDimensionsType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>,\n    \n    ...P\n|};\n\nexport type PropDefinitionType<T, P, S : $Values<typeof PROP_TYPE>, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : string,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>,\n        export : (X) => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    bodyParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    // eslint-disable-next-line no-undef\n    bodyValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, 'boolean', X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, 'string', X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, 'number', X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, 'function', X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, 'array', X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, 'object', X>;\n\nexport type MixedPropDefinitionType<P, X> =\n    BooleanPropDefinitionType<*, P, X> |\n    StringPropDefinitionType<*, P, X> |\n    NumberPropDefinitionType<*, P, X> |\n    FunctionPropDefinitionType<*, P, X> |\n    ObjectPropDefinitionType<*, P, X> |\n    ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {|\n    [string] : MixedPropDefinitionType<P, X>\n|};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\n// eslint-disable-next-line flowtype/require-exact-type\nconst decorateOnce = <F : Function>({ value } : { value : F }) : F => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          'string',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n\ntype PropCallback<P, X, R> =\n    ((string, BooleanPropDefinitionType<boolean, P, X>, boolean) => R) &\n    ((string, StringPropDefinitionType<string, P, X>, string) => R) &\n    ((string, NumberPropDefinitionType<number, P, X>, number) => R) &\n    ((string, FunctionPropDefinitionType<Function, P, X>, Function) => R) &\n    ((string, ArrayPropDefinitionType<$ReadOnlyArray<*> | $ReadOnlyArray<*>, P, X>, $ReadOnlyArray<*> | $ReadOnlyArray<*>) => R) &\n    ((string, ObjectPropDefinitionType<Object, P, X>, Object) => R);\n\nexport function eachProp<P, X>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, void>) {\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        // $FlowFixMe[incompatible-call]\n        handler(key, propDef, value);\n    }\n}\n\nexport function mapProps<P, X, T>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, T>) : $ReadOnlyArray<T> {\n    const results = [];\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        // $FlowFixMe[incompatible-call]\n        const result = handler(key, propDef, value);\n        results.push(result);\n    });\n    return results;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend, base64encode } from 'belter/src';\n\nimport { eachProp, mapProps, type PropsInputType, type PropsType, type PropsDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION, METHOD } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\nfunction getDefaultInputProps<P>() : P {\n    // $FlowFixMe[incompatible-type]\n    const defaultInputProps : P = {};\n    return defaultInputProps;\n}\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) {\n\n    inputProps = inputProps || getDefaultInputProps();\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        if (!propDef) {\n            return;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            // $FlowFixMe[incompatible-call]\n            // $FlowFixMe[incompatible-exact]\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe[incompatible-call]\n            const decoratedValue = propDef.decorate({ value, props, state, close, focus, event, onError });\n            // $FlowFixMe[incompatible-type]\n            props[key] = decoratedValue;\n        }\n    });\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\nexport function serializeProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>), method : $Values<typeof METHOD>) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(mapProps(props, propsDef, (key, propDef, value) => {\n        return ZalgoPromise.resolve().then(() => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            const getParam = {\n                [ METHOD.GET ]:  propDef.queryParam,\n                [ METHOD.POST ]: propDef.bodyParam\n            }[method];\n\n            const getValue = {\n                [ METHOD.GET ]:  propDef.queryValue,\n                [ METHOD.POST ]: propDef.bodyValue\n            }[method];\n            \n            if (!getParam) {\n                return;\n            }\n\n            return ZalgoPromise.hash({\n\n                finalParam: ZalgoPromise.try(() => {\n                    if (typeof getParam === 'function') {\n                        // $FlowFixMe[incompatible-call]\n                        return getParam({ value });\n                    } else if (typeof getParam === 'string') {\n                        return getParam;\n                    } else {\n                        return key;\n                    }\n                }),\n    \n                finalValue: ZalgoPromise.try(() => {\n                    if (typeof getValue === 'function' && isDefined(value)) {\n                        // $FlowFixMe[incompatible-call]\n                        // $FlowFixMe[incompatible-return]\n                        return getValue({ value });\n                    } else {\n                        // $FlowFixMe[incompatible-return]\n                        return value;\n                    }\n                })\n\n            }).then(({ finalParam, finalValue }) => {\n\n                let result;\n\n                if (typeof finalValue === 'boolean') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'string') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'object' && finalValue !== null) {\n\n                    if (propDef.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(finalValue);\n                    } else if (propDef.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(finalValue));\n                    } else if (propDef.serialization === PROP_SERIALIZATION.DOTIFY || !propDef.serialization) {\n                        result = dotify(finalValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof finalValue === 'number') {\n                    result = finalValue.toString();\n                }\n\n                params[finalParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize, isElementClosed,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT, METHOD,\n    INITIAL_PROPS, WINDOW_REFERENCES, DEFAULT_DIMENSIONS } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { serializeProps, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype Rerender = () => ZalgoPromise<void>;\n\ntype RenderContainerOptions = {|\n    context : $Values<typeof CONTEXT>,\n    uid : string,\n    proxyFrame : ?ProxyObject<HTMLIFrameElement>,\n    proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>,\n    rerender : Rerender\n|};\n\ntype ResolveInitPromise = () => ZalgoPromise<void>;\ntype RejectInitPromise = (mixed) => ZalgoPromise<void>;\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, RenderContainerOptions) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>, uid : string |}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState,\n    resolveInitPromise : ResolveInitPromise,\n    rejectInitPromise : RejectInitPromise\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype RenderOptions = {|\n    target : CrossDomainWindowType,\n    container : string | HTMLElement,\n    context : $Values<typeof CONTEXT>,\n    rerender : Rerender\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (RenderOptions) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\ntype ParentOptions<P, X> = {|\n    options : NormalizedComponentOptionsType<P, X>,\n    overrides? : ParentDelegateOverrides<P>,\n    parentWin? : CrossDomainWindowType\n|};\n\nexport function parentComponent<P, X>({ options, overrides = getDefaultOverrides(), parentWin = window } : ParentOptions<P, X>) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props : PropsType<P> = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getDimensions = () : CssDimensionsType => {\n        if (typeof dimensions === 'function') {\n            return dimensions({ props });\n        }\n        return dimensions;\n    };\n\n    const resolveInitPromise = () => {\n        return ZalgoPromise.try(() => {\n            if (overrides.resolveInitPromise) {\n                return overrides.resolveInitPromise();\n            }\n\n            return initPromise.resolve();\n        });\n    };\n\n    const rejectInitPromise = (err : mixed) => {\n        return ZalgoPromise.try(() => {\n            if (overrides.rejectInitPromise) {\n                return overrides.rejectInitPromise(err);\n            }\n\n            return initPromise.reject(err);\n        });\n    };\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return rejectInitPromise(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildQuery = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.GET);\n    };\n\n    const buildBody = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.POST);\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return buildQuery().then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            resolveInitPromise();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = getDimensions();\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin.setName(windowName).then(() => {\n                return proxyWin;\n            });\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (!cancelled) {\n                if (isClosed) {\n                    return close(new Error(`Detected ${ context } close`));\n                } else {\n                    return watchForClose(proxyWin, context);\n                }\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const resolveExports = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide, export: resolveExports };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain, uid).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, uid, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context, uid }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        \n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions: getDimensions(), event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : {| context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid, rerender } : RenderContainerOptions) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid, rerender });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => {\n                    const removeError = new Error(`Detected container element removed from DOM`);\n                    return ZalgoPromise.delay(1).then(() => {\n                        if (isElementClosed(innerContainer)) {\n                            close(removeError);\n                        } else {\n                            clean.all(removeError);\n                            return rerender().then(resolveInitPromise, rejectInitPromise);\n                        }\n                    });\n                });\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError, getInternalState, setInternalState, resolveInitPromise, rejectInitPromise }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = ({ target, container, context, rerender } : RenderOptions) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const buildBodyPromise = buildBody();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame, rerender });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const getMethodPromise = ZalgoPromise.hash({ body: buildBodyPromise }).then(({ body }) => {\n                if (options.method) {\n                    return options.method;\n                }\n\n                if (Object.keys(body).length) {\n                    return METHOD.POST;\n                }\n\n                return METHOD.GET;\n            });\n\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, windowUrl: buildUrlPromise, body: buildBodyPromise, method: getMethodPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, windowUrl, body, method }) => {\n                return proxyWin.setLocation(windowUrl, { method, body });\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions } : RenderOptionsType<P>) : ?HTMLElement {\n    const  { width, height } = dimensions;\n\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity, extend } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, METHOD } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ComponentOptionsType<P, X> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n    method? : $Values<typeof METHOD>,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    exports? : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n    method : ?$Values<typeof METHOD>,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    exports : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type ZoidComponentInstance<P, X = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nconst getDefaultDimensions = () : CssDimensionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P, X>(options : ComponentOptionsType<P, X>) : NormalizedComponentOptionsType<P, X> {\n    const {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props = {},\n        dimensions = getDefaultDimensions(),\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xports = getDefaultExports(),\n        method\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[cannot-spread-inexact]\n    const propsDef : PropsDefinitionType<P, X> = {\n        ...getBuiltInProps(),\n        ...props\n    };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        method,\n        propsDef,\n        dimensions,\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P, X>(opts : ComponentOptionsType<P, X>) : Component<P, X> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent({\n                    options, overrides, parentWin: source\n                })\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent({\n            options\n        });\n\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n\n                if (target !== window && typeof container !== 'string') {\n                    throw new Error(`Must pass string element when rendering to another window`);\n                }\n\n                return parent.render({\n                    target,\n                    container,\n                    context:    finalContext,\n                    rerender: () => {\n                        const newInstance = clone();\n                        extend(instance, newInstance);\n                        return newInstance.renderTo(target, container, context);\n                    }\n                });\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X>, L) => D\n|};\n\nexport type ZoidProps<P> = PropsType<P>;\n\nexport function create<P, X>(options : ComponentOptionsType<P, X>) : ZoidComponent<P, X> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n}\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n"],"sourceRoot":""}