{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/undefined.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","constructor","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","promiseResult","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","slice","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","Class","isNativeReflectConstruct","a","instance","Function","_wrapNativeSuper","_cache","Map","Wrapper","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","dasherizeToCamel","string","g","toUpperCase","defineLazyProp","arrayFrom","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","isDefined","cleanup","cleanErr","tasks","cleaned","cleaner","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","getBody","body","document","isDocumentReady","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","getGlobal","globalKey","__POST_ROBOT__","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","getWindowDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getName","getType","focus","isClosed","setLocation","href","opts","form","display","input","submit","submitForm","setName","sameDomain","frameElement","querySelectorAll","getFrameForWindow","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","getProxyObject","openBridge","bridges","bridgeFrames","openBridgeFrame","linkUrl","hasBridge","destroyBridges","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","export","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","destroy","defaultNoop","decorateOnce","eachProp","propDef","serializeProps","getParam","queryParam","bodyParam","getValue","queryValue","bodyValue","finalParam","finalValue","serialization","dotify","prefix","newobj","every","dotkey","mapProps","parentComponent","triggered","emitter","currentProxyWin","currentProxyContainer","childComponent","overrides","parentWin","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","resolveInitPromise","rejectInitPromise","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","outerWidth","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","exportsPromise","resolveExports","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","rerender","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","parentElement","mutationObserver","frameWin","watchElementForClose","removeError","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","alias","default","decorate","decoratedValue","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","ZOID","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","query","originalUrl","originalHash","hashString","extendUrl","buildBodyPromise","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","getMethodPromise","loadUrlPromise","windowUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","getExports","react","React","ReactDOM","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","component","inheritAttrs","mounted","$el","$attrs","reduce","acc","styleObject","includes","watch","deep","angular","ng","directive","scope","restrict","controller","$scope","$element","safeApply","$root","$$phase","$apply","getProps","$watch","angular2","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","AngularComponent","selector","template","inputs","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","cleanInstances","cleanZoid","allowDelegateListener","delegateListener","allowedParentDomains","defaultContext","validate","eligible","logger","info","normalizeOptions","driverCache","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentExports","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","xport","normalizedProps","normalizeChildProps","checkParentDomain","getPropsByRef","eligibility","reason","clone","getDefaultContext","finalContext","getDefaultContainer","newInstance","renderTo","isEligible","driver","driverName","dep","drivers","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n        \n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe method-unbinding\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(once(() => method(cleanErr)));\n            }\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull,\n    serializeUndefined\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,\n    undefined? : CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull,\n    [ TYPE.UNDEFINED ]: serializeUndefined\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nimport type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() : Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\n\nexport function serializeUndefined(val : void) : NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\n\nexport function deserializeUndefined() : void {\n    // pass\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull,\n    deserializeUndefined\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>,\n    undefined? : PrimitiveDeserializer<void>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull,\n    [ TYPE.UNDEFINED ]: deserializeUndefined\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            const getWindowDetails = () : WinDetails => {\n                const winDetails = popupWindowsByName.get(data.name);\n                // $FlowFixMe\n                return winDetails;\n            };\n\n            if (!getWindowDetails().domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (getWindowDetails().domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ getWindowDetails().domain || 'unknown' }`);\n            }\n\n            registerRemoteSendMessage(getWindowDetails().win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    if (!getWindowDetails()) {\n                        return;\n                    }\n\n                    const domain = getWindowDetails().domain;\n\n                    if (!domain) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: domain,\n                            source: getWindowDetails().win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        // $FlowFixMe\n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : {| send : SendType |}) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                // $FlowFixMe[object-this-reference]\n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            // $FlowFixMe[object-this-reference]\n                            origin: this.origin,\n                            // $FlowFixMe[object-this-reference]\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop, submitForm } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE, METHOD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SetLocationOptions = {|\n    method? : $Values<typeof METHOD>,\n    body? : {|\n        [string] : string | boolean\n    |}\n|};\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (url : string, opts? : SetLocationOptions) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    const getName = () => winPromise.then(win => {\n        if (isWindowClosed(win)) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n\n        return windowNamePromise;\n    });\n\n    const getDefaultSetLocationOptions = () => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setLocation = (href : string, opts? : SetLocationOptions = getDefaultSetLocationOptions()) => winPromise.then(win => {\n        const domain = `${ window.location.protocol }//${ window.location.host }`;\n        const { method = METHOD.GET, body } = opts;\n\n        if (href.indexOf('/') === 0) {\n            href = `${ domain }${ href }`;\n        } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n            throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n        }\n\n        if (method === METHOD.POST) {\n            return getName().then(name => {\n                if (!name) {\n                    throw new Error(`Can not post to window without target name`);\n                }\n\n                submitForm({\n                    url:    href,\n                    target: name,\n                    method,\n                    body\n                });\n            });\n        } else if (method === METHOD.GET) {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n\n        } else {\n            throw new Error(`Unsupported method: ${ method }`);\n        }\n    });\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName,\n        focus:         () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation,\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string, opts? : SetLocationOptions) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href, opts).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe[method-unbinding]\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\n\n// $FlowFixMe\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                // $FlowFixMe[object-this-reference]\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X>(options : NormalizedComponentOptionsType<P, X>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports: parentExports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent : ParentExportsType<P, X> = deserializeMessage(parentComponentWindow, parentDomain, parentExports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        return parent.export(xports);\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION, PROP_TYPE } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {|\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>,\n\n    ...P\n|};\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    uid : uidPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>,\n    \n    ...P\n|};\n\nexport type PropDefinitionType<T, P, S : $Values<typeof PROP_TYPE>, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : string,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>,\n        export : (X) => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    bodyParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    // eslint-disable-next-line no-undef\n    bodyValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, 'boolean', X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, 'string', X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, 'number', X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, 'function', X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, 'array', X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, 'object', X>;\n\nexport type MixedPropDefinitionType<P, X> =\n    BooleanPropDefinitionType<*, P, X> |\n    StringPropDefinitionType<*, P, X> |\n    NumberPropDefinitionType<*, P, X> |\n    FunctionPropDefinitionType<*, P, X> |\n    ObjectPropDefinitionType<*, P, X> |\n    ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {|\n    [string] : MixedPropDefinitionType<P, X>\n|};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\n// eslint-disable-next-line flowtype/require-exact-type\nconst decorateOnce = <F : Function>({ value } : { value : F }) : F => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          'string',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n\ntype PropCallback<P, X, R> =\n    ((string, BooleanPropDefinitionType<boolean, P, X>, boolean) => R) &\n    ((string, StringPropDefinitionType<string, P, X>, string) => R) &\n    ((string, NumberPropDefinitionType<number, P, X>, number) => R) &\n    ((string, FunctionPropDefinitionType<Function, P, X>, Function) => R) &\n    ((string, ArrayPropDefinitionType<$ReadOnlyArray<*> | $ReadOnlyArray<*>, P, X>, $ReadOnlyArray<*> | $ReadOnlyArray<*>) => R) &\n    ((string, ObjectPropDefinitionType<Object, P, X>, Object) => R);\n\nexport function eachProp<P, X>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, void>) {\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        // $FlowFixMe[incompatible-call]\n        handler(key, propDef, value);\n    }\n}\n\nexport function mapProps<P, X, T>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, T>) : $ReadOnlyArray<T> {\n    const results = [];\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        // $FlowFixMe[incompatible-call]\n        const result = handler(key, propDef, value);\n        results.push(result);\n    });\n    return results;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend, base64encode } from 'belter/src';\n\nimport { eachProp, mapProps, type PropsInputType, type PropsType, type PropsDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION, METHOD } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\nfunction getDefaultInputProps<P>() : P {\n    // $FlowFixMe[incompatible-type]\n    const defaultInputProps : P = {};\n    return defaultInputProps;\n}\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) {\n\n    inputProps = inputProps || getDefaultInputProps();\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        if (!propDef) {\n            return;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            // $FlowFixMe[incompatible-call]\n            // $FlowFixMe[incompatible-exact]\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe[incompatible-call]\n            const decoratedValue = propDef.decorate({ value, props, state, close, focus, event, onError });\n            // $FlowFixMe[incompatible-type]\n            props[key] = decoratedValue;\n        }\n    });\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\nexport function serializeProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>), method : $Values<typeof METHOD>) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(mapProps(props, propsDef, (key, propDef, value) => {\n        return ZalgoPromise.resolve().then(() => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            const getParam = {\n                [ METHOD.GET ]:  propDef.queryParam,\n                [ METHOD.POST ]: propDef.bodyParam\n            }[method];\n\n            const getValue = {\n                [ METHOD.GET ]:  propDef.queryValue,\n                [ METHOD.POST ]: propDef.bodyValue\n            }[method];\n            \n            if (!getParam) {\n                return;\n            }\n\n            return ZalgoPromise.hash({\n\n                finalParam: ZalgoPromise.try(() => {\n                    if (typeof getParam === 'function') {\n                        // $FlowFixMe[incompatible-call]\n                        return getParam({ value });\n                    } else if (typeof getParam === 'string') {\n                        return getParam;\n                    } else {\n                        return key;\n                    }\n                }),\n    \n                finalValue: ZalgoPromise.try(() => {\n                    if (typeof getValue === 'function' && isDefined(value)) {\n                        // $FlowFixMe[incompatible-call]\n                        // $FlowFixMe[incompatible-return]\n                        return getValue({ value });\n                    } else {\n                        // $FlowFixMe[incompatible-return]\n                        return value;\n                    }\n                })\n\n            }).then(({ finalParam, finalValue }) => {\n\n                let result;\n\n                if (typeof finalValue === 'boolean') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'string') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'object' && finalValue !== null) {\n\n                    if (propDef.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(finalValue);\n                    } else if (propDef.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(finalValue));\n                    } else if (propDef.serialization === PROP_SERIALIZATION.DOTIFY || !propDef.serialization) {\n                        result = dotify(finalValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof finalValue === 'number') {\n                    result = finalValue.toString();\n                }\n\n                params[finalParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize, isElementClosed,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT, METHOD,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { serializeProps, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype Rerender = () => ZalgoPromise<void>;\n\ntype RenderContainerOptions = {|\n    context : $Values<typeof CONTEXT>,\n    uid : string,\n    proxyFrame : ?ProxyObject<HTMLIFrameElement>,\n    proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>,\n    rerender : Rerender\n|};\n\ntype ResolveInitPromise = () => ZalgoPromise<void>;\ntype RejectInitPromise = (mixed) => ZalgoPromise<void>;\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, RenderContainerOptions) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>, uid : string |}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState,\n    resolveInitPromise : ResolveInitPromise,\n    rejectInitPromise : RejectInitPromise\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype RenderOptions = {|\n    target : CrossDomainWindowType,\n    container : string | HTMLElement,\n    context : $Values<typeof CONTEXT>,\n    rerender : Rerender\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (RenderOptions) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\ntype ParentOptions<P, X> = {|\n    options : NormalizedComponentOptionsType<P, X>,\n    overrides? : ParentDelegateOverrides<P>,\n    parentWin? : CrossDomainWindowType\n|};\n\nexport function parentComponent<P, X>({ options, overrides = getDefaultOverrides(), parentWin = window } : ParentOptions<P, X>) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props : PropsType<P> = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const resolveInitPromise = () => {\n        return ZalgoPromise.try(() => {\n            if (overrides.resolveInitPromise) {\n                return overrides.resolveInitPromise();\n            }\n\n            return initPromise.resolve();\n        });\n    };\n\n    const rejectInitPromise = (err : mixed) => {\n        return ZalgoPromise.try(() => {\n            if (overrides.rejectInitPromise) {\n                return overrides.rejectInitPromise(err);\n            }\n\n            return initPromise.reject(err);\n        });\n    };\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return rejectInitPromise(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildQuery = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.GET);\n    };\n\n    const buildBody = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.POST);\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return buildQuery().then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            resolveInitPromise();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width, height } = dimensions;\n    \n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin.setName(windowName).then(() => {\n                return proxyWin;\n            });\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (!cancelled) {\n                if (isClosed) {\n                    return close(new Error(`Detected ${ context } close`));\n                } else {\n                    return watchForClose(proxyWin, context);\n                }\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const resolveExports = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide, export: resolveExports };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain, uid).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, uid, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context, uid }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions, event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : {| context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid, rerender } : RenderContainerOptions) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid, rerender });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => {\n                    const removeError = new Error(`Detected container element removed from DOM`);\n                    return ZalgoPromise.delay(1).then(() => {\n                        if (isElementClosed(innerContainer)) {\n                            close(removeError);\n                        } else {\n                            clean.all(removeError);\n                            return rerender().then(resolveInitPromise, rejectInitPromise);\n                        }\n                    });\n                });\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError, getInternalState, setInternalState, resolveInitPromise, rejectInitPromise }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = ({ target, container, context, rerender } : RenderOptions) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const buildBodyPromise = buildBody();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame, rerender });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const getMethodPromise = ZalgoPromise.hash({ body: buildBodyPromise }).then(({ body }) => {\n                if (options.method) {\n                    return options.method;\n                }\n\n                if (Object.keys(body).length) {\n                    return METHOD.POST;\n                }\n\n                return METHOD.GET;\n            });\n\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, windowUrl: buildUrlPromise, body: buildBodyPromise, method: getMethodPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, windowUrl, body, method }) => {\n                return proxyWin.setLocation(windowUrl, { method, body });\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class ReactClassType {}\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class __ReactComponent {}\n\ntype ReactElementType = {|\n\n|};\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({| render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void |}) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType, typeof ReactClassType, *> = {\n\n    register: (tag, propsDef, init, { React, ReactDOM }) => {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n                const parent = init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { noop, dasherizeToCamel } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        // In vue `style` is a reserved prop name\n        if (key === 'style-object' || key === 'styleObject') {\n            acc.style = value;\n            // To keep zoid as generic as possible, passing in the original prop name as well\n            acc.styleObject = value;\n        } else if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue : ComponentDriverType<*, VueType, RegisteredVueComponent, *> = {\n\n    register: (tag, propsDef, init, Vue) => {\n\n        return Vue.component(tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                // $FlowFixMe[object-this-reference]\n                const el = this.$el;\n                // $FlowFixMe[object-this-reference]\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                // $FlowFixMe[object-this-reference]\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {|\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    |}) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular, AngularModule, *> = {\n\n    register: (tag, propsDef, init, ng) => {\n\n        const module = ng.module(tag, []).directive(dasherizeToCamel(tag), () => {\n\n            const scope = {};\n\n            for (const key of Object.keys(propsDef)) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    // $FlowFixMe\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({| selector : string, template : string, inputs : $ReadOnlyArray<string> |}) => {|\n        Class : ({| constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void |}) => Angular2Component\n    |},\n    NgModule : ({| declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> |}) => {|\n        Class : ({| constructor : () => void |}) => Angular2Module\n    |},\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2, Angular2Module, *> = {\n\n    register: (tag, propsDef, init, { Component : AngularComponent, NgModule, ElementRef, NgZone }) => {\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        // $FlowFixMe\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    // $FlowFixMe[object-this-reference]\n                    this._props = {};\n                    // $FlowFixMe[object-this-reference]\n                    this.elementRef = elementRef;\n                    // $FlowFixMe[object-this-reference]\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    // $FlowFixMe[object-this-reference]\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    // $FlowFixMe[object-this-reference]\n                    this.parent = init(getProps(this));\n                    // $FlowFixMe[object-this-reference]\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    // $FlowFixMe[object-this-reference]\n                    if (this.parent && !equals(this._props, this.props)) {\n                        // $FlowFixMe[object-this-reference]\n                        this._props = { ...this.props };\n                        // $FlowFixMe[object-this-reference]\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity, extend } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS, METHOD } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ComponentOptionsType<P, X> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n    method? : $Values<typeof METHOD>,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    exports? : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n    method : ?$Values<typeof METHOD>,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    exports : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type ZoidComponentInstance<P, X = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nfunction normalizeOptions<P, X>(options : ComponentOptionsType<P, X>) : NormalizedComponentOptionsType<P, X> {\n    const {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props = {},\n        dimensions = {},\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xports = getDefaultExports(),\n        method\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n    const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = dimensions;\n\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[cannot-spread-inexact]\n    const propsDef : PropsDefinitionType<P, X> = {\n        ...getBuiltInProps(),\n        ...props\n    };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        method,\n        propsDef,\n        dimensions: { width, height },\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P, X>(opts : ComponentOptionsType<P, X>) : Component<P, X> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent({\n                    options, overrides, parentWin: source\n                })\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent({\n            options\n        });\n\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n\n                if (target !== window && typeof container !== 'string') {\n                    throw new Error(`Must pass string element when rendering to another window`);\n                }\n\n                return parent.render({\n                    target,\n                    container,\n                    context:    finalContext,\n                    rerender: () => {\n                        const newInstance = clone();\n                        extend(instance, newInstance);\n                        return newInstance.renderTo(target, container, context);\n                    }\n                });\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X>, L) => D\n|};\n\nexport type ZoidProps<P> = PropsType<P>;\n\nexport function create<P, X>(options : ComponentOptionsType<P, X>) : ZoidComponent<P, X> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n}\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n"],"sourceRoot":""}